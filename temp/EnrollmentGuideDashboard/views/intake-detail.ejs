<%- include('partials/header', { title: title }) %>

<div class="max-w-6xl mx-auto">
    <!-- Header -->
    <div class="bg-white shadow-sm rounded-lg mb-6">
        <div class="px-6 py-4 border-b border-gray-200">
            <div class="flex items-center justify-between">
                <div>
                    <h1 class="text-2xl font-bold text-gray-900"><%= intake.intake_id %></h1>
                    <p class="text-sm text-gray-600 mt-1">
                        <span class="mr-4">Client: <span class="font-medium"><%= intake.client_name %></span></span>
                        <span class="mr-4">Plan Year: <span class="font-medium"><%= intake.plan_year %></span></span>
                        <span>Received: <span class="font-medium"><%= new Date(intake.date_received).toLocaleDateString() %></span></span>
                    </p>
                </div>
                <div class="flex items-center gap-3">
                    <!-- Status Badge -->
                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium status-badge <%= 
                        intake.status === 'NOT_STARTED' ? 'bg-gray-100 text-gray-800' :
                        intake.status === 'STARTED' ? 'status-low' :
                        intake.status === 'ROADBLOCK' ? 'status-high' :
                        intake.status === 'READY_FOR_QA' ? 'status-moderate' :
                        'status-minimal'
                    %>">
                        <%= intake.status.replace(/_/g, ' ') %>
                    </span>
                    
                    <!-- Complexity Badge -->
                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium status-badge <%= 
                        intake.complexity_band === 'MINIMAL' ? 'status-minimal' :
                        intake.complexity_band === 'LOW' ? 'status-low' :
                        intake.complexity_band === 'MODERATE' ? 'status-moderate' :
                        'status-high'
                    %>">
                        <%= intake.complexity_band %>
                    </span>
                    
                    <a href="/dashboard" class="text-gray-600 hover:text-gray-900">
                        <i data-feather="arrow-left" class="w-5 h-5"></i>
                    </a>
                </div>
            </div>
        </div>
        
        <!-- Success Message -->
        <% if (showCreatedMessage) { %>
            <div class="px-6 py-3 bg-green-50 border-b border-green-200">
                <div class="flex items-center">
                    <i data-feather="check-circle" class="w-5 h-5 text-green-600 mr-2"></i>
                    <p class="text-green-800 text-sm">Intake request created successfully!</p>
                </div>
            </div>
        <% } %>
        
        <!-- Tabs -->
        <div class="px-6">
            <nav class="flex space-x-8" aria-label="Tabs">
                <a href="/intakes/<%= intake.intake_id %>?tab=overview" 
                   class="<%= activeTab === 'overview' ? 'border-primary text-primary' : 'border-transparent text-muted hover:text-primary hover:border-primary' %> whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
                    Overview
                </a>
                <a href="/intakes/<%= intake.intake_id %>?tab=sections" 
                   class="<%= activeTab === 'sections' ? 'border-primary text-primary' : 'border-transparent text-muted hover:text-primary hover:border-primary' %> whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
                    Sections
                </a>
            </nav>
        </div>
    </div>

    <!-- Tab Content -->
    <div class="bg-white shadow-sm rounded-lg">
        <% if (activeTab === 'overview') { %>
            <!-- Overview Tab -->
            <div class="p-6">
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                    <!-- Basic Information -->
                    <div>
                        <h3 class="text-lg font-medium text-gray-900 mb-4">Basic Information</h3>
                        <dl class="space-y-3">
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Client Name</dt>
                                <dd class="text-sm text-gray-900 mt-1"><%= intake.client_name %></dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Requestor</dt>
                                <dd class="text-sm text-gray-900 mt-1">
                                    <%= intake.requestor_name %>

                                </dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Plan Year</dt>
                                <dd class="text-sm text-gray-900 mt-1"><%= intake.plan_year %></dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Date Received</dt>
                                <dd class="text-sm text-gray-900 mt-1"><%= new Date(intake.date_received).toLocaleDateString() %></dd>
                            </div>
                            <% if (intake.guide_type) { %>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Guide Type</dt>
                                <dd class="text-sm text-gray-900 mt-1">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                        <%= intake.guide_type %>
                                    </span>
                                </dd>
                            </div>
                            <% } %>
                            <% if (intake.communications_add_ons) { %>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Communications Add Ons</dt>
                                <dd class="text-sm text-gray-900 mt-1">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">
                                        <%= intake.communications_add_ons %>
                                    </span>
                                </dd>
                            </div>
                            <% } %>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Status</dt>
                                <dd class="text-sm text-gray-900 mt-1">
                                    <select class="status-select rounded-md border-gray-300 text-sm" 
                                            data-intake-id="<%= intake.intake_id %>" data-current-status="<%= intake.status %>">
                                        <option value="NOT_STARTED" <%= intake.status === 'NOT_STARTED' ? 'selected' : '' %>>Not Started</option>
                                        <option value="STARTED" <%= intake.status === 'STARTED' ? 'selected' : '' %>>Started</option>
                                        <option value="ROADBLOCK" <%= intake.status === 'ROADBLOCK' ? 'selected' : '' %>>Roadblock</option>
                                        <option value="READY_FOR_QA" <%= intake.status === 'READY_FOR_QA' ? 'selected' : '' %>>Ready for QA</option>
                                        <option value="DELIVERED_TO_CONSULTANT" <%= intake.status === 'DELIVERED_TO_CONSULTANT' ? 'selected' : '' %>>Delivered to Consultant</option>
                                    </select>
                                </dd>
                            </div>
                        </dl>
                    </div>
                    
                    <!-- Complexity & Metadata -->
                    <div>
                        <h3 class="text-lg font-medium text-gray-900 mb-4">Complexity Analysis</h3>
                        <dl class="space-y-3">
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Complexity Band</dt>
                                <dd class="text-sm text-gray-900 mt-1">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium status-badge <%= 
                                        intake.complexity_band === 'Minimal' ? 'status-minimal' :
                                        intake.complexity_band === 'Low' ? 'status-low' :
                                        intake.complexity_band === 'Medium' ? 'status-moderate' :
                                        'status-high'
                                    %>">
                                        <%= intake.complexity_band %>
                                    </span>
                                </dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Complexity Score</dt>
                                <dd class="text-sm text-gray-900 mt-1"><%= intake.complexity_score %></dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Sections Changed</dt>
                                <dd class="text-sm text-gray-900 mt-1">
                                    <% const changedSections = Object.entries(intake.sections_changed_flags).filter(([_, changed]) => changed).map(([section, _]) => section); %>
                                    <% const sectionDefinitions = {
                                        A: 'Eligibility',
                                        B: 'Enrollment', 
                                        C: 'Benefits Administration',
                                        D: 'Medical- Plans and Plan Designs',
                                        E: 'Medical- Deductible Support (EX:HRA/HSA)',
                                        F: 'Medical- Spending Accounts (EX:FSA/LPFSA/DCA)',
                                        G: 'Medical- Telehealth',
                                        H: 'Dental',
                                        I: 'Vision',
                                        J: 'Life/AD&D',
                                        K: 'Voluntary Life/AD&D',
                                        L: 'Short Term Disability',
                                        M: 'Long Term Disability',
                                        N: 'Statutory Leave',
                                        O: 'Voluntary Benefits (EX:Accident/CI/HI)',
                                        P: 'EAP',
                                        Q: 'Additional Perks and Other Programs (EX:Fedlogic/LSA)'
                                    }; %>
                                    <% if (changedSections.length > 0) { %>
                                        <div class="flex flex-wrap gap-2">
                                            <% changedSections.forEach(section => { %>
                                                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-warning-light text-warning border border-warning">
                                                    <strong><%= section %>:</strong>&nbsp;<%= sectionDefinitions[section] || section %>
                                                </span>
                                            <% }); %>
                                        </div>
                                    <% } else { %>
                                        <span class="text-gray-500">No sections changed</span>
                                    <% } %>
                                </dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Pages Required</dt>
                                <dd class="text-sm text-gray-900 mt-1">
                                    <% const includedSections = Object.entries(intake.sections_included_flags || {}).filter(([_, included]) => included).map(([section, _]) => section); %>
                                    <% if (includedSections.length > 0) { %>
                                        <div class="flex flex-wrap gap-2">
                                            <% includedSections.forEach(section => { %>
                                                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 border border-green-200">
                                                    <strong><%= section %>:</strong>&nbsp;<%= sectionDefinitions[section] || section %>
                                                </span>
                                            <% }); %>
                                        </div>
                                    <% } else { %>
                                        <span class="text-gray-500">No sections marked for inclusion</span>
                                    <% } %>
                                </dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Created</dt>
                                <dd class="text-sm text-gray-900 mt-1"><%= new Date(intake.created_at).toLocaleString() %></dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Last Updated</dt>
                                <dd class="text-sm text-gray-900 mt-1"><%= new Date(intake.updated_at).toLocaleString() %></dd>
                            </div>
                        </dl>
                    </div>
                </div>
                
                <!-- Payroll Storage URL -->
                <% if (intake.payroll_storage_url) { %>
                    <div class="mt-8 pt-6 border-t border-gray-200">
                        <h3 class="text-lg font-medium text-gray-900 mb-3">Payroll & Production Details</h3>
                        <div class="bg-blue-50 p-4 rounded-lg space-y-3">
                            <p class="text-sm text-gray-600">
                                <strong>Storage Location:</strong> 
                                <span class="ml-1"><%= intake.payroll_storage_url %></span>
                            </p>
                            <% if (intake.requested_production_time) { %>
                                <p class="text-sm text-gray-600">
                                    <strong>Production Time:</strong> 
                                    <span class="inline-flex items-center px-2 py-1 rounded text-xs font-medium <%= intake.requested_production_time === 'Rush' ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800' %> ml-1">
                                        <%= intake.requested_production_time %>
                                    </span>
                                </p>
                            <% } %>
                        </div>
                    </div>
                <% } %>
                
                <!-- General Notes -->
                <% if (intake.notes_general) { %>
                    <div class="mt-8 pt-6 border-t border-gray-200">
                        <h3 class="text-lg font-medium text-gray-900 mb-3">General Notes</h3>
                        <div class="bg-gray-50 p-4 rounded-lg">
                            <p class="text-sm text-gray-700 whitespace-pre-wrap"><%= intake.notes_general %></p>
                        </div>
                    </div>
                <% } %>
            </div>
            
        <% } else if (activeTab === 'sections') { %>
            <!-- Sections Tab -->
            <div class="p-6">
                <h3 class="text-lg font-medium text-gray-900 mb-6">Section Details</h3>
                
                <% if (Object.values(sections).some(section => section !== null && (Array.isArray(section) ? section.length > 0 : true))) { %>
                    <div class="space-y-8">
                        <% Object.entries(sectionDefinitions).forEach(([code, definition]) => { %>
                            <% const sectionData = sections[code]; %>
                            <% if (sectionData && (Array.isArray(sectionData) ? sectionData.length > 0 : true)) { %>
                                <div class="border border-gray-200 rounded-lg">
                                    <div class="bg-gray-50 px-6 py-4 border-b border-gray-200">
                                        <h4 class="text-lg font-medium text-gray-900">Section <%= code %>: <%= definition.name %></h4>
                                    </div>
                                    <div class="p-6">
                                        <% if (sectionData) { %>
                                            <!-- Single section - simplified structure -->
                                            <div class="bg-gray-50 p-4 rounded-lg">
                                                <h5 class="font-medium text-gray-700 mb-3">Change Description</h5>
                                                <p class="text-sm text-gray-900 whitespace-pre-wrap"><%= sectionData.payload.change_description || 'No description provided' %></p>
                                            </div>
                                        <% } %>
                                    </div>
                                </div>
                            <% } %>
                        <% }); %>
                    </div>
                <% } else { %>
                    <div class="text-center py-12">
                        <i data-feather="file-text" class="w-12 h-12 mx-auto text-gray-300 mb-4"></i>
                        <h3 class="text-lg font-medium text-gray-900 mb-2">No Section Details</h3>
                        <p class="text-gray-600">No detailed section information has been provided for this intake.</p>
                    </div>
                <% } %>
            </div>
            

        <% } %>
    </div>
</div>

<script>
// Status update functionality
document.addEventListener('DOMContentLoaded', function() {
    const statusSelects = document.querySelectorAll('.status-select');
    
    statusSelects.forEach(select => {
        select.addEventListener('change', function() {
            const intakeId = this.dataset.intakeId;
            const newStatus = this.value;
            const oldStatus = this.dataset.currentStatus;
            
            // Update status via API
            fetch(`/intakes/${intakeId}/status`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ status: newStatus })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.showToast('Status updated successfully', 'success');
                    this.dataset.currentStatus = newStatus;
                } else {
                    throw new Error(data.error || 'Failed to update status');
                }
            })
            .catch(error => {
                console.error('Error updating status:', error);
                window.showToast('Failed to update status', 'error');
                this.value = oldStatus; // Revert the select
            });
        });
    });
});

// Initialize Feather Icons
feather.replace();

</script>
