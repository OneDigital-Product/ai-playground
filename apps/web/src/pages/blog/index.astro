---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import BlogCard from "../../components/BlogCard.astro";

const posts = (await getCollection("blog", ({ data }) => !data.draft)).sort(
  (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
);

type PostItem = (typeof posts)[number];
const byYear = posts.reduce<Record<string, PostItem[]>>((m, p) => {
  const y = p.data.pubDate.getFullYear();
  (m[y] ??= []).push(p);
  return m;
}, {});
---

<BaseLayout title="Blog" description="All posts by year with tags">
  <section class="mx-auto max-w-5xl py-10 sm:py-14">
    <h1 class="text-balance text-4xl sm:text-5xl font-semibold tracking-tight">All Writing</h1>
    <p class="mt-2 max-w-2xl text-muted-foreground">Browse posts by year. Click a tag to filter.</p>
  </section>

  <section class="mx-auto max-w-5xl pb-16">
    {Object.keys(byYear)
      .sort((a, b) => Number(b) - Number(a))
      .map((year) => (
        <section class="mb-12">
          <div class="mb-6 flex items-center gap-4">
            <div class="h-px flex-1 bg-border"></div>
            <span class="font-mono text-[10px] uppercase tracking-[0.2em] text-muted-foreground">{year}</span>
          </div>
          <ul class="grid grid-cols-1 gap-6 sm:grid-cols-2">
            {(byYear[year] ?? []).map((p) => {
              const href = `/app/blog/${p.slug}`;
              return (
                <li>
                  <BlogCard title={p.data.title} description={p.data.description} date={p.data.pubDate} href={href} tags={p.data.tags} />
                </li>
              );
            })}
          </ul>
        </section>
      ))}
  </section>
</BaseLayout>
