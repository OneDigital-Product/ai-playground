---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import BlogCard from "../components/BlogCard.astro";
type PostEntry = {
  slug: string;
  data: { title: string; description: string; pubDate: string | Date; tags?: string[] };
};

export async function getStaticPaths(ctx: unknown) {
  const posts = (await getCollection("blog", ({ data }) => !data.draft)).sort(
    (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
  );
  const { paginate } = ctx as { paginate: (items: unknown[], options: { pageSize: number }) => unknown };
  return paginate(posts, { pageSize: 6 }) as any;
}

const { page } = Astro.props;
const pageData = page as unknown as { data: PostEntry[]; url: { prev?: string; next?: string } };
const prevHref = pageData.url.prev === "/app/1" ? "/app" : pageData.url.prev;
---

<BaseLayout title="Welcome" description="Latest updates and articles">
  <section class="mx-auto max-w-[1200px] py-20 md:py-24">
    <p class="text-[14px] uppercase tracking-[0.05em] text-muted-foreground">Engineering serendipity</p>
    <h1 class="mt-4 text-balance text-[56px] sm:text-[72px] md:text-[88px] font-extrabold leading-[0.95] tracking-tight text-primary">
      At Infrared Mind + Body of the web
    </h1>
    <p class="mt-6 max-w-2xl text-pretty text-[20px] leading-[1.6] text-muted-foreground">
      Articles on product, engineering, and design — exploring how simple systems and vivid ideas create outsized impact.
    </p>
  </section>

  <section aria-labelledby="blog-heading" class="mx-auto max-w-[1200px] pb-20">
    <h2 id="blog-heading" class="sr-only">Latest Posts</h2>
    <ul class="grid items-stretch grid-cols-1 gap-8 md:grid-cols-2 xl:grid-cols-3 xl:gap-10">
      {pageData.data.map((post) => {
        const { title, description, pubDate, tags } = post.data;
        const href = `/app/blog/${post.slug}`;
        return (
          <li class="h-full">
            <BlogCard title={title} description={description} date={pubDate} href={href} tags={tags} />
          </li>
        );
      })}
    </ul>

    <nav class="mt-16 flex items-center justify-between border-t pt-8">
      {prevHref ? (
        <a href={prevHref} class="text-[14px] uppercase tracking-[0.05em] text-muted-foreground hover:text-primary">← Previous</a>
      ) : <span />}
      {pageData.url.next && (
        <a href={pageData.url.next} class="text-[14px] uppercase tracking-[0.05em] text-muted-foreground hover:text-primary">Next →</a>
      )}
    </nav>
  </section>


</BaseLayout>
